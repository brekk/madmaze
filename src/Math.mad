floor :: Integer -> Integer
export floor = (x) => #- Math.floor(x) -#

floorFloat :: Float -> Float
export floorFloat = (x) => #- Math.floor(x) -#

min :: Integer -> Integer -> Integer
export min = (a, b) => #- Math.min(a, b) -#

minFloat :: Float -> Float -> Float
export minFloat = (a, b) => #- Math.min(a, b) -#

max :: Integer -> Integer -> Integer
export max = (a, b) => #- Math.max(a, b) -#

maxFloat :: Float -> Float -> Float
export maxFloat = (a, b) => #- Math.max(a, b) -#

abs :: Integer -> Integer
export abs = (a) => #- Math.abs(a) -#

absFloat :: Float -> Float
export absFloat = (a) => #- Math.abs(a) -#
remainder :: Float -> Float -> Float
export remainder = (d, n) => {
  q = n / d
  p = q * n
  return n - p
}
